{"remainingRequest":"/Users/vanchespop/6og/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vanchespop/6og/src/components/Checkout/PayPalButton.vue?vue&type=style&index=0&id=718d1f2e&scoped=true&lang=css&","dependencies":[{"path":"/Users/vanchespop/6og/src/components/Checkout/PayPalButton.vue","mtime":1625599649960},{"path":"/Users/vanchespop/6og/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wYXlwYWwtYnV0dG9ucyB7CiAgICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["PayPalButton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA","file":"PayPalButton.vue","sourceRoot":"src/components/Checkout","sourcesContent":["<template>\n    <div class=\"paypal-buttons\"></div>\n</template>\n\n<script>\n    import {mapState, mapGetters} from 'vuex'\n\n    const axios = require('axios').default;\n\n    export default {\n        name: \"PayPalButton\",\n        props: ['isInvalid', 'validate'],\n        computed: {\n            ...mapState({\n                checkoutStatus: state => state.Cart.checkoutStatus,\n            }),\n            ...mapGetters({\n                    total: 'Cart/cartTotalPrice',\n                    countryCode: 'Checkout/countryCode',\n                    shipCost: 'Checkout/shipCost'\n                },\n            ),\n            finalCart: {\n                get() {\n                    return this.$store.state.Cart.finalCart\n                }\n            },\n            email: {\n                get() {\n                    return this.$store.state.Checkout.email\n                },\n                set(value) {\n                    this.$store.commit('updateEmail', value)\n                }\n            },\n            phone: {\n                get() {\n                    return this.$store.state.Checkout.phone\n                },\n                set(value) {\n                    this.$store.commit('Checkout/updatePhone', value)\n                }\n            },\n            firstName: {\n                get() {\n                    return this.$store.state.Checkout.firstName\n                },\n                set(value) {\n                    this.$store.commit('updateFirstName', value)\n                }\n            },\n            lastName: {\n                get() {\n                    return this.$store.state.Checkout.lastName\n                },\n                set(value) {\n                    this.$store.commit('updateLastName', value)\n                }\n            },\n            address: {\n                get() {\n                    return this.$store.state.Checkout.address\n                },\n                set(value) {\n                    this.$store.commit('updateAddress', value)\n                }\n            },\n            city: {\n                get() {\n                    return this.$store.state.Checkout.city\n                },\n                set(value) {\n                    this.$store.commit('updateCity', value)\n                }\n            },\n            country: {\n                get() {\n                    return this.$store.state.Checkout.country\n                },\n                set(value) {\n                    this.$store.commit('updateCountry', value)\n                }\n            },\n            region: {\n                get() {\n                    return this.$store.state.Checkout.region\n                },\n                set(value) {\n                    this.$store.commit('updateRegion', value)\n                }\n            },\n            postalCode: {\n                get() {\n                    return this.$store.state.Checkout.postalCode\n                },\n                set(value) {\n                    this.$store.commit('updatePostalCode', value)\n                }\n            },\n\n        },\n        methods: {\n            postOrder: (order) => {\n                let session_url = 'https://6og.ooo/api/paypal';\n                return new Promise(() => {\n                    axios({\n                        method: 'post',\n                        url: session_url,\n                        data: {\n                            order\n                        }\n                    })\n                        .then(res => {\n                            // eslint-disable-next-line no-console\n                            console.log(order)\n                            // eslint-disable-next-line no-console\n                            console.log(res)\n                        })\n                        .catch(err => {\n                            // eslint-disable-next-line no-console\n                            console.log(order)\n                            // eslint-disable-next-line no-console\n                            console.log(err)\n                        })\n                })\n            },\n        },\n        mounted: function () {\n            var that = this;\n            // var paypalActions;\n            window.paypal.Buttons({\n                createOrder: function (data, actions) {\n                    const total = that.total + '';\n                    const email = that.email + '';\n                    const firstName = that.firstName + '';\n                    const lastName = that.lastName + '';\n                    const address = that.address + '';\n                    const city = that.city + '';\n                    const region = that.region + '';\n                    const countryCode = that.countryCode + '';\n                    const postalCode = that.postalCode + '';\n                    const finalCart = that.finalCart;\n                    const shipCost = that.shipCost + '';\n                    const finalCost = (that.total + that.shipCost) + '';\n                    const phone = that.phone + ''\n                    return actions.order.create({\n                        intent: \"CAPTURE\",\n                        application_context: {\n                            shipping_preference: \"SET_PROVIDED_ADDRESS\",\n                        },\n                        payer: {\n                            name: {\n                                given_name: firstName,\n                                surname: lastName\n                            },\n                            email_address: email\n                        },\n                        purchase_units: [\n                            {\n                                description: firstName + \" \" + lastName + \";\" + email+ \";\" + phone,\n                                amount: {\n                                    currency_code: 'RUB',\n                                    value: finalCost,\n                                    breakdown: {\n                                        item_total: {\n                                            currency_code: 'RUB',\n                                            value: total\n                                        },\n                                        shipping: {\n                                            currency_code: 'RUB',\n                                            value: shipCost\n                                        }\n                                    }\n                                },\n                                shipping: {\n                                    address: {\n                                        address_line_1: address,\n                                        admin_area_2: city,\n                                        admin_area_1: region,\n                                        postal_code: postalCode,\n                                        country_code: countryCode\n                                    }\n                                },\n                                items: finalCart\n                            }\n                        ],\n                    });\n                },\n                onApprove: function (data, actions) {\n                    return actions.order.get().then(function (orderDetails) {\n                            that.postOrder(orderDetails);\n                            return actions.order.capture().then(\n                                function () {\n                                    that.$store.commit(\"Cart/clearCart\")\n                                    that.$store.commit(\"Checkout/toggleSuccessModal\")\n                                }\n                            )\n                        }\n                    );\n                },\n                onError() {\n                    that.validate.$touch()\n                },\n            }).render('.paypal-buttons')\n        },\n        //TODO Доделать отключение кнопки при не прохождении валидации\n    }\n\n</script>\n\n<style scoped>\n    .paypal-buttons {\n        margin: auto;\n    }\n</style>"]}]}
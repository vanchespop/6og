{"remainingRequest":"/Users/vanchespop/6og/node_modules/babel-loader/lib/index.js!/Users/vanchespop/6og/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vanchespop/6og/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vanchespop/6og/src/components/Checkout/PayPalButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vanchespop/6og/src/components/Checkout/PayPalButton.vue","mtime":1625599649960},{"path":"/Users/vanchespop/6og/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vanchespop/6og/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PayPalButton.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"paypal-buttons\"></div>\n</template>\n\n<script>\n    import {mapState, mapGetters} from 'vuex'\n\n    const axios = require('axios').default;\n\n    export default {\n        name: \"PayPalButton\",\n        props: ['isInvalid', 'validate'],\n        computed: {\n            ...mapState({\n                checkoutStatus: state => state.Cart.checkoutStatus,\n            }),\n            ...mapGetters({\n                    total: 'Cart/cartTotalPrice',\n                    countryCode: 'Checkout/countryCode',\n                    shipCost: 'Checkout/shipCost'\n                },\n            ),\n            finalCart: {\n                get() {\n                    return this.$store.state.Cart.finalCart\n                }\n            },\n            email: {\n                get() {\n                    return this.$store.state.Checkout.email\n                },\n                set(value) {\n                    this.$store.commit('updateEmail', value)\n                }\n            },\n            phone: {\n                get() {\n                    return this.$store.state.Checkout.phone\n                },\n                set(value) {\n                    this.$store.commit('Checkout/updatePhone', value)\n                }\n            },\n            firstName: {\n                get() {\n                    return this.$store.state.Checkout.firstName\n                },\n                set(value) {\n                    this.$store.commit('updateFirstName', value)\n                }\n            },\n            lastName: {\n                get() {\n                    return this.$store.state.Checkout.lastName\n                },\n                set(value) {\n                    this.$store.commit('updateLastName', value)\n                }\n            },\n            address: {\n                get() {\n                    return this.$store.state.Checkout.address\n                },\n                set(value) {\n                    this.$store.commit('updateAddress', value)\n                }\n            },\n            city: {\n                get() {\n                    return this.$store.state.Checkout.city\n                },\n                set(value) {\n                    this.$store.commit('updateCity', value)\n                }\n            },\n            country: {\n                get() {\n                    return this.$store.state.Checkout.country\n                },\n                set(value) {\n                    this.$store.commit('updateCountry', value)\n                }\n            },\n            region: {\n                get() {\n                    return this.$store.state.Checkout.region\n                },\n                set(value) {\n                    this.$store.commit('updateRegion', value)\n                }\n            },\n            postalCode: {\n                get() {\n                    return this.$store.state.Checkout.postalCode\n                },\n                set(value) {\n                    this.$store.commit('updatePostalCode', value)\n                }\n            },\n\n        },\n        methods: {\n            postOrder: (order) => {\n                let session_url = 'https://6og.ooo/api/paypal';\n                return new Promise(() => {\n                    axios({\n                        method: 'post',\n                        url: session_url,\n                        data: {\n                            order\n                        }\n                    })\n                        .then(res => {\n                            // eslint-disable-next-line no-console\n                            console.log(order)\n                            // eslint-disable-next-line no-console\n                            console.log(res)\n                        })\n                        .catch(err => {\n                            // eslint-disable-next-line no-console\n                            console.log(order)\n                            // eslint-disable-next-line no-console\n                            console.log(err)\n                        })\n                })\n            },\n        },\n        mounted: function () {\n            var that = this;\n            // var paypalActions;\n            window.paypal.Buttons({\n                createOrder: function (data, actions) {\n                    const total = that.total + '';\n                    const email = that.email + '';\n                    const firstName = that.firstName + '';\n                    const lastName = that.lastName + '';\n                    const address = that.address + '';\n                    const city = that.city + '';\n                    const region = that.region + '';\n                    const countryCode = that.countryCode + '';\n                    const postalCode = that.postalCode + '';\n                    const finalCart = that.finalCart;\n                    const shipCost = that.shipCost + '';\n                    const finalCost = (that.total + that.shipCost) + '';\n                    const phone = that.phone + ''\n                    return actions.order.create({\n                        intent: \"CAPTURE\",\n                        application_context: {\n                            shipping_preference: \"SET_PROVIDED_ADDRESS\",\n                        },\n                        payer: {\n                            name: {\n                                given_name: firstName,\n                                surname: lastName\n                            },\n                            email_address: email\n                        },\n                        purchase_units: [\n                            {\n                                description: firstName + \" \" + lastName + \";\" + email+ \";\" + phone,\n                                amount: {\n                                    currency_code: 'RUB',\n                                    value: finalCost,\n                                    breakdown: {\n                                        item_total: {\n                                            currency_code: 'RUB',\n                                            value: total\n                                        },\n                                        shipping: {\n                                            currency_code: 'RUB',\n                                            value: shipCost\n                                        }\n                                    }\n                                },\n                                shipping: {\n                                    address: {\n                                        address_line_1: address,\n                                        admin_area_2: city,\n                                        admin_area_1: region,\n                                        postal_code: postalCode,\n                                        country_code: countryCode\n                                    }\n                                },\n                                items: finalCart\n                            }\n                        ],\n                    });\n                },\n                onApprove: function (data, actions) {\n                    return actions.order.get().then(function (orderDetails) {\n                            that.postOrder(orderDetails);\n                            return actions.order.capture().then(\n                                function () {\n                                    that.$store.commit(\"Cart/clearCart\")\n                                    that.$store.commit(\"Checkout/toggleSuccessModal\")\n                                }\n                            )\n                        }\n                    );\n                },\n                onError() {\n                    that.validate.$touch()\n                },\n            }).render('.paypal-buttons')\n        },\n        //TODO Доделать отключение кнопки при не прохождении валидации\n    }\n\n</script>\n\n<style scoped>\n    .paypal-buttons {\n        margin: auto;\n    }\n</style>"],"sourceRoot":"src/components/Checkout"}]}